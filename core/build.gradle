plugins {
    id 'com.google.protobuf' version '0.8.3'
    id 'idea'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile project(':frames')
    compile project(':auth')

    compile 'io.rsocket:rsocket-load-balancer:0.9.20'
    compile 'io.rsocket:rsocket-transport-netty:0.9.20'

    compile 'io.netifi.proteus:proteus-core:0.2.5'

    testCompile 'com.google.protobuf:protobuf-java:3.5.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.apache.logging.log4j:log4j-api:2.8.2'
    testCompile 'org.apache.logging.log4j:log4j-core:2.8.2'
    testCompile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
    testCompile 'io.rsocket:rsocket-transport-local:0.9.20'
    testCompile 'org.mockito:mockito-all:1.10.19'
}

protobuf {
    generatedFilesBaseDir = "${projectDir}/src/generated"

    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.0'
    }
    plugins {
        proteus {
            artifact = 'io.netifi.proteus:proteus-java:0.2.5'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            proteus {}
        }
    }
}

sourceSets {
    test {
        proto { srcDir 'src/test/proto' }
    }
}

idea {
    module {
        testSourceDirs += file("src/test/proto")
        testSourceDirs += file("src/generated/test/java")
        testSourceDirs += file("src/generated/test/proteus")

        generatedSourceDirs += file('src/generated/test/java')
        generatedSourceDirs += file('src/generated/test/proteus')
    }
}
